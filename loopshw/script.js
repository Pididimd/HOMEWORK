// todo : Написать программу, которая определяет количество положительных, отрицательных чисел и нулей. Пользователь вводит числа с помощью prompt() до тех пор пока не нажмет отмена. Пример вывода: Положительных: 2 шт. Отрицательных: 5 шт. Нулей: 3 шт.

// let positiveCount = 0;
// let negativeCount = 0;
// let zeroCount = 0;

// while (true) {
//   let input = prompt("Введите число:");

  // проверяем, нажал ли пользователь отмену
//   if (input === null) {
//     break;
//   }

  // преобразуем введенное значение в число
//   let number = Number(input);

  // проверяем, является ли число положительным, отрицательным или нулем
//   if (number > 0) {
//     positiveCount++;
//   } else if (number < 0) {
//     negativeCount++;
//   } else {
//     zeroCount++;
//   }
// }

// выводим результаты подсчета
// console.log(`Положительных: ${positiveCount} шт.`);
// console.log(`Отрицательных: ${negativeCount} шт.`);
// console.log(`Нулей: ${zeroCount} шт.`);

// !!: В этом коде мы используем цикл while, который будет запрашивать у пользователя ввод чисел до тех пор, пока он не нажмет кнопку отмены. Затем мы преобразуем введенное значение в число и проверяем, является ли оно положительным, отрицательным или нулем. Если число положительное, мы увеличиваем счетчик положительных чисел, если отрицательное - увеличиваем счетчик отрицательных чисел, а если ноль - увеличиваем счетчик нулей.После того, как пользователь нажмет кнопку отмены, мы выводим результаты подсчета в консоль с помощью команды console.log().


// todo : Написать программу, которая выводит среднее арифметическое n чисел введенных пользователем. Ввод чисел прекращается, когда нажали отмена, после чего выводится среднее арифметическое.

// let sum = 0;
// let count = 0;

// while (true) {
//   let input = prompt("Введите число:");

  // проверяем, нажал ли пользователь отмену
//   if (input === null) {
//     break;
//   }

  // преобразуем введенное значение в число
//   let number = Number(input);

  // добавляем число к сумме и увеличиваем счетчик
//   sum += number;
//   count++;
// }

// проверяем, были ли введены числа
// if (count === 0) {
//   console.log("Вы не ввели ни одного числа.");
// } else {
  // вычисляем среднее арифметическое и выводим его
//   let average = sum / count;
//   console.log(`Среднее арифметическое: ${average}`);
// }

// !!: В этом коде мы используем цикл while, который будет запрашивать у пользователя ввод чисел до тех пор, пока он не нажмет кнопку отмены. Затем мы преобразуем введенное значение в число и добавляем его к сумме. Также мы увеличиваем счетчик введенных чисел. После того, как пользователь нажмет кнопку отмены, мы проверяем, были ли введены какие-либо числа. Если нет, мы выводим сообщение об ошибке. Если да, мы вычисляем среднее арифметическое, выводим его в консоль с помощью команды console.log().


// todo : Написать программу, в которой пользователя просят ввести числа 5 раз. Причем каждое последующее число должно быть больше предыдущего, иначе вывести текст ошибка! в консоль и прекратить ввод.

// let prevNumber = null;

// for (let i = 1; i <= 5; i++) {
//   let input = prompt(`Введите число #${i}:`);

  // проверяем, является ли введенное значение числом
//   if (isNaN(input)) {
//     console.log("Ошибка! Введено не число.");
//     break;
//   }

  // преобразуем введенное значение в число
//   let number = Number(input);

  // проверяем, является ли это первым введенным числом или больше предыдущего
//   if (prevNumber === null || number > prevNumber) {
//     prevNumber = number;
//   } else {
//     console.log("Ошибка! Введенное число не больше предыдущего.");
//     break;
//   }

  // проверяем, является ли это последним введенным числом
//   if (i === 5) {
//     console.log("Вы ввели все числа правильно.");
//   }
// }

// !!: В этом коде мы используем цикл for, который будет запрашивать у пользователя ввод чисел 5 раз. Затем мы проверяем, является ли введенное значение числом с помощью функции isNaN(). Если нет, мы преобразуем введенное значение в число. Затем мы проверяем, является ли это первым введенным числом или больше предыдущего. Если это первое число или больше предыдущего, мы сохраняем его в переменную prevNumber и продолжаем цикл. Если же введенное число не больше предыдущего, мы выводим сообщение об ошибке и прекращаем цикл с помощью оператора break. После того, как пользователь введет все 5 чисел правильно, мы выводим сообщение об успехе.

// ?? Я рискнул и попробовал решить используя цикл While

// let prevNumber = null;
// let i = 0;

// while (i < 5) {
//   let input = prompt(`Введите число #${i + 1}:`);

//   if (isNaN(input)) {
//     console.log("Ошибка! Введено не число.");
//     break;
//   }

//   let number = Number(input);

//   if (prevNumber !== null && number <= prevNumber) {
//     console.log("Ошибка! Введенное число не больше предыдущего.");
//     break;
//   }

//   prevNumber = number;
//   i++;
// }

// if (i === 5) {
//   console.log("Вы ввели все числа правильно.");
// }
// !! Этот код работает так же, как и предыдущий код, но использует цикл while вместо цикла for. Также здесь используется переменная i вместо переменной prevNumber, чтобы отслеживать порядковый номер введенного числа. Кроме того, в этом коде мы используем оператор !== вместо оператора ===, чтобы проверить, не является ли prevNumber равным null. Это более простой и понятный способ проверки на неравенство.этот код легче для чтения и понимания!

//todo : Написать программу-генератор популярных песен. Пользователь вводит число. Вывести количество pam равное этом числу. Строка должна начинаться с param. Например: Вводим 3 Программа выводит: "param-pam-pam-pam" Вводим 5 Программа выводит: "param-pam-pam-pam-pam-pam" ==В этом задании запрещено использовать .repeat() (все делаем циклом)==

// let count = prompt("Введите количество 'pam':");
// let song = "param-";

// for (let i = 0; i < count; i++) {
//   song += "pam-";
// }

// song = song.slice(0, -1);

// console.log(song);

// !! В этой программе мы сначала запрашиваем у пользователя количество слов "pam", которые нужно добавить в строку. Затем мы создаем начало строки, которая всегда будет начинаться с "param-". Затем мы создаем цикл for, который будет повторяться count раз и добавлять "pam-" в строку каждый раз. После цикла мы удаляем последний символ ("-"), используя метод slice(), чтобы строка была корректно отформатирована.